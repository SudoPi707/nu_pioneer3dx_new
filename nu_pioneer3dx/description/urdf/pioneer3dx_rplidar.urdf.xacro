<?xml version="1.0"?>
<!-- 
This is the xacro description of a Pioneer 3DX, to be used in rviz and gazebo.
Copyright (C) 2013 Rafael Berkvens rafael.berkvens@uantwerpen.be

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

This project is based on work by Tracy Davies, where it was in turn based on
work original in ucs-ros-pkg.
 -->
<robot name="pioneer3dx" xmlns:xacro="http://ros.org/wiki/xacro">
    <!-- import the pioneer 3dx's wheels -->
    <xacro:include filename="$(find nu_pioneer3dx)/description/urdf/pioneer3dx_wheel.xacro" />
    <!-- chassis -->
    <link name="base_link">
        <inertial>
            <mass value="3.5" />
            <!--<origin xyz="-0.025 0 -0.223"/> -->
            <origin xyz="-0.05 0 0" />
            <inertia ixx="1" ixy="0" ixz="0" iyy="1" iyz="0" izz="1" />
        </inertial>
        <visual>
            <origin xyz="-0.045 0 0.148" rpy="0 0 0" />
            <geometry name="pioneer_geom">
                <mesh filename="package://nu_pioneer3dx/description/meshes/chassis.stl" />
            </geometry>
            <material name="ChassisRed"></material>
        </visual>
        <collision>
            <origin xyz="-0.045 0 0.145" rpy="0 0 0" />
            <geometry>
                <box size="0.35 0.25 0.14" />
            </geometry>
        </collision>
    </link>
    <!-- top_plate -->
    <link name="top_plate">
        <inertial>
            <mass value="0.01" />
            <origin xyz="0 0 0" />
            <inertia ixx="1" ixy="0" ixz="0" iyy="1" iyz="0" izz="1" />
        </inertial>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry name="top_geom">
                <mesh filename="package://nu_pioneer3dx/description/meshes/top.stl" />
            </geometry>
            <material name="TopBlack"></material>
        </visual>
        <collision>
            <origin xyz="0.0 0 0" rpy="0 0 0" />
            <geometry name="pioneer_geom">
                <box size="0.45 0.38 0.01" />
            </geometry>
        </collision>
    </link>
    <joint name="base_top_joint" type="fixed">
        <origin xyz="-0.045 0 0.234" rpy="0 0 0" />
        <parent link="base_link" />
        <child link="top_plate" />
    </joint>
    <!-- swivel -->
    <link name="swivel">
        <inertial>
            <mass value="0.1" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01" />
        </inertial>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry name="pioneer_geom">
                <mesh filename="package://nu_pioneer3dx/description/meshes/swivel.stl" />
            </geometry>
            <material name="swivel"></material>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="0.00001 0.00001 0.00001" />
            </geometry>
        </collision>
    </link>
    <joint name="base_swivel_joint" type="fixed">
        <origin xyz="-0.185 0 0.055" rpy="0 0 0" />
        <axis xyz="0 0 1" />
        <anchor xyz="0 0 0" />
        <limit effort="100" velocity="100" k_velocity="0" />
        <joint_properties damping="0.0" friction="0.0" />
        <parent link="base_link" />
        <child link="swivel" />
    </joint>
    <!-- center_hubcap -->
    <link name="center_hubcap">
        <inertial>
            <mass value="0.01" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.012411765597" ixy="-0.000711733678" ixz="0.00050272983" iyy="0.015218160428" iyz="-0.000004273467" izz="0.011763977943" />
        </inertial>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry name="pioneer_geom">
                <mesh filename="package://nu_pioneer3dx/description/meshes/center_hubcap.stl" />
            </geometry>
            <material name="swivel"></material>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="0.00001 0.00001 0.00001" />
            </geometry>
        </collision>
    </link>
    <joint name="swivel_hubcap_joint" type="fixed">
        <origin xyz="-0.026 0 -0.016" rpy="0 0 0" />
        <axis xyz="0 1 0" />
        <anchor xyz="0 0 0" />
        <limit effort="100" velocity="100" k_velocity="0" />
        <joint_properties damping="0.0" friction="0.0" />
        <parent link="swivel" />
        <child link="center_wheel" />
    </joint>
    <!-- center_wheel -->
    <link name="center_wheel">
        <inertial>
            <mass value="1.0" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.012411765597" ixy="-0.000711733678" ixz="0.00050272983" iyy="0.015218160428" iyz="-0.000004273467" izz="0.011763977943" />
        </inertial>
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry name="pioneer_geom">
                <mesh filename="package://nu_pioneer3dx/description/meshes/center_wheel.stl" />
            </geometry>
            <material name="WheelBlack"></material>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="${-3.1415927/2.0} 0 0" />
            <geometry>
                <cylinder radius="0.0375" length="0.01" />
            </geometry>
        </collision>
    </link>
    <joint name="center_wheel_joint" type="fixed">
        <origin xyz="-0.0035 0 -0.001" rpy="0 0 0" />
        <parent link="center_wheel" />
        <child link="center_hubcap" />
    </joint>
    <!-- End of Legacy for diff drive plugin
	https://github.com/ros-simulation/gazebo_ros_pkgs/pull/707/files
	"This setting assumes you have a old package, where the right and left wheel are changed to fix a former code issue\n"
	"To get rid of this error just set <legacyMode> to false if you just created a new package.\n"
	"To fix an old package you have to exchange left wheel by the right wheel.\n"
	-->
    <xacro:p3dx_wheel suffix="left" parent="base_link" reflect="-1" />
    <xacro:p3dx_wheel suffix="right" parent="base_link" reflect="1" />
    <!-- front_sonar -->
    <link name="front_sonar">
        <inertial>
            <mass value="0.0001" />
            <origin xyz="0 0 0" />
            <inertia ixx="1" ixy="0" ixz="0" iyy="1" iyz="0" izz="1" />
        </inertial>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry name="pioneer_geom">
                <mesh filename="package://nu_pioneer3dx/description/meshes/front_sonar.stl" />
            </geometry>
            <material name="SonarYellow"></material>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <box size="0.00001 0.00001 0.00001" />
            </geometry>
        </collision>
    </link>
    <joint name="base_front_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0.109 0 0.209" />
        <parent link="base_link" />
        <child link="front_sonar" />
    </joint>
    <!-- rplidar laser -->
    <link name="rplidar">
        <visual>
            <origin xyz="0 0 0.0" rpy="0 0 0" />
            <geometry>
                <mesh filename="package://nu_pioneer3dx/description/meshes/rplidar/lds.stl" scale="0.001 0.001 0.001" />
            </geometry>
            <material name="Gazebo/Black" />
        </visual>
        <collision>
            <origin xyz="0.015 0 -0.0065" rpy="0 0 0" />
            <geometry>
                <cylinder length="0.0315" radius="0.055" />
            </geometry>
        </collision>
        <inertial>
            <mass value="0.114" />
            <origin xyz="0 0 0" />
            <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001" />
        </inertial>
    </link>
    <gazebo reference="base_scan">
        <material value="Gazebo/Black" />
    </gazebo>
    <joint name="rplidar_joint" type="fixed">
        <parent link="base_link" />
        <child link="rplidar" />
        <origin xyz="0.12 0 0.26" rpy="0 0 0" />
    </joint>

    <!-- properties (constants) -->
    <property name="ns" value="p3dx" />
    <!-- ros_control plugin -->
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <!--<robotNamespace>/${ns}</robotNamespace>-->
        </plugin>
    </gazebo>
    <!-- base_link -->
    <gazebo reference="base_link">
        <material>Gazebo/Red</material>
    </gazebo>
    <!-- top_plate -->
    <gazebo reference="top_plate">
        <material>Gazebo/Black</material>
    </gazebo>
    <!-- swivel -->
    <gazebo reference="swivel">
        <material>Gazebo/Grey</material>
    </gazebo>
    <!-- center_hubcap -->
    <gazebo reference="center_hubcap">
        <material>Gazebo/Grey</material>
    </gazebo>
    <!-- center_wheel -->
    <gazebo reference="center_wheel">
        <material>Gazebo/Black</material>
        <mu1>0.0</mu1>
        <mu2>0.0</mu2>
        <kp>1000000.0</kp>
        <kd>1.0</kd>
    </gazebo>
    <!-- front_sonar -->
    <gazebo reference="front_sonar">
        <material value="Gazebo/Yellow" />
    </gazebo>
    <!-- differential drive -->
    <gazebo>
        <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>100</updateRate>
            <leftJoint>base_right_wheel_joint</leftJoint>
            <rightJoint>base_left_wheel_joint</rightJoint>
            <wheelSeparation>0.314</wheelSeparation>
            <wheelDiameter>0.179</wheelDiameter>
            <torque>5</torque>
            <commandTopic>cmd_vel</commandTopic>
            <odometryTopic>odom</odometryTopic>
            <odometryFrame>odom</odometryFrame>
            <robotBaseFrame>base_link</robotBaseFrame>
            <publishWheelTF>true</publishWheelTF>
            <publishWheelJointState>true</publishWheelJointState>
            <wheelAcceleration>0</wheelAcceleration>
            <wheelTorque>5</wheelTorque>
            <rosDebugLevel>na</rosDebugLevel>
            <publishTf>1</publishTf>
            <legacyMode>false</legacyMode>
        </plugin>
    </gazebo>
    <!-- ground truth -->
    <gazebo>
        <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>30.0</updateRate>
            <bodyName>base_link</bodyName>
            <topicName>base_pose_ground_truth</topicName>
            <gaussianNoise>0.01</gaussianNoise>
            <frameName>map</frameName>
            <!-- initialize odometry for fake localization -->
            <xyzOffsets>0 0 0</xyzOffsets>
            <rpyOffsets>0 0 0</rpyOffsets>
        </plugin>
    </gazebo>
    <!-- rplidar -->
    <gazebo reference="rplidar">
        <material>Gazebo/Black</material>
        <sensor type="ray" name="lds_lfcd_sensor">
            <pose>0 0 0 0 0 0</pose>
            <visualize>false</visualize>
            <update_rate>5</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <resolution>1</resolution>
                        <min_angle>0.0</min_angle>
                        <max_angle>6.28319</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.120</min>
                    <max>3.5</max>
                    <resolution>0.015</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.01</stddev>
                </noise>
            </ray>
            <plugin name="gazebo_ros_lds_lfcd_controller" filename="libgazebo_ros_laser.so">
                <topicName>scan</topicName>
                <frameName>laser</frameName>
            </plugin>
        </sensor>
    </gazebo>
</robot>